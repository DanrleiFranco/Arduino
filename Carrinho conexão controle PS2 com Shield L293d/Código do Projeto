 
//     A0, A1, A2, A3, A4, A5
//     14, 15, 16, 17, 18, 19
//biblioteca do controle PS2:
#include <PS2X_lib.h>
//biblioteca da placa shield:
#include <AFMotor.h>
//pinos diditais do arduino utilizados pela shield:
AF_DCMotor motor1(1);
AF_DCMotor motor2(2);
AF_DCMotor motor3(3);
AF_DCMotor motor4(4);
#define buzzer 19

PS2X ps2x; // cria o objeto "ps2x" para a biblioteca "PS2X"
int error = 0; 
byte type = 0;
byte vibrate = 0;

void setup(){
  //velocidade inicial dos motores = 0:
  motor1.setSpeed(0);
  motor2.setSpeed(0);
  motor3.setSpeed(0);
  motor4.setSpeed(0);
  pinMode(buzzer, OUTPUT);
  // permite visualizar os sinais enviado pelo controle PS2 no monitor serial:
  Serial.begin(57600); 
  error = ps2x.config_gamepad(15,16,17,18, true, true);   //setup pins and settings:  GamePad(clock (marrom), command(cinza), attention(lilás), data(branco),
                                                          //Pressures?, Rumble?) check for error
}

void loop(){
  byte velocidade = 255;
  byte velocidade_lenta = 70;

  if(error == 1) //skip loop if no controller found
  return; 
  ps2x.read_gamepad(false, vibrate);          //read controller and set large motor to spin at 'vibrate' speed
    
  if(ps2x.Button(PSB_START))                   //will be TRUE as long as button is presse
    Serial.println("Start is being held");
  if(ps2x.Button(PSB_SELECT))
    Serial.println("Select is being held");
         
         
  if(ps2x.Button(PSB_PAD_UP)) {         //will be TRUE as long as button is pressed
    Serial.println("CIMA: ");
    Serial.println(ps2x.Analog(PSAB_PAD_UP), DEC);
    motor1.setSpeed(velocidade); // velocidade máxima 0 a 255
    motor2.setSpeed(velocidade); // velocidade máxima 0 a 255
    motor3.setSpeed(velocidade); // velocidade máxima 0 a 255
    motor4.setSpeed(velocidade); // velocidade máxima 0 a 255
    motor1.run(FORWARD); // sentido de rotação horário
    motor2.run(FORWARD); // sentido de rotação horário
    motor3.run(FORWARD); // sentido de rotação horário
    motor4.run(FORWARD); // sentido de rotação horário
  }else {
    if(ps2x.Button(PSB_PAD_DOWN)){
      Serial.println("BAIXO: ");
      Serial.println(ps2x.Analog(PSAB_PAD_DOWN), DEC);
      motor1.setSpeed(velocidade);
      motor2.setSpeed(velocidade);
      motor3.setSpeed(velocidade);
      motor4.setSpeed(velocidade);
      motor1.run(BACKWARD);
      motor2.run(BACKWARD);
      motor3.run(BACKWARD);
      motor4.run(BACKWARD);
  }else {
    if(ps2x.Button(PSB_PAD_RIGHT)){
      Serial.print("DIREITA: ");
      Serial.println(ps2x.Analog(PSAB_PAD_RIGHT), DEC);
      motor1.setSpeed(velocidade); // velocidade máxima 0 a 255
      motor2.setSpeed(velocidade); // velocidade máxima 0 a 255
      motor3.setSpeed(velocidade); // velocidade máxima 0 a 255
      motor4.setSpeed(velocidade); // velocidade máxima 0 a 255
      motor1.run(BACKWARD); // sentido de rotação horário
      motor2.run(FORWARD); // sentido de rotação horário
      motor3.run(FORWARD); // sentido de rotação horário
      motor4.run(BACKWARD); // sentido de rotação horário
  }else {
    if(ps2x.Button(PSB_PAD_LEFT)){
      Serial.print("ESQUERDA: ");
      Serial.println(ps2x.Analog(PSAB_PAD_LEFT), DEC); 
      motor1.setSpeed(velocidade); // velocidade máxima 0 a 255
      motor2.setSpeed(velocidade); // velocidade máxima 0 a 255
      motor3.setSpeed(velocidade); // velocidade máxima 0 a 255
      motor4.setSpeed(velocidade); // velocidade máxima 0 a 255
      motor1.run(FORWARD); // sentido de rotação horário
      motor2.run(BACKWARD); // sentido de rotação horário
      motor3.run(BACKWARD); // sentido de rotação horário
      motor4.run(FORWARD); // sentido de rotação horário
  }else {
     motor1.setSpeed(0); // velocidade 0, motor parado
     motor2.setSpeed(0); // velocidade 0, motor parado
     motor3.setSpeed(0); // velocidade 0, motor parado
     motor4.setSpeed(0); // velocidade 0, motor parado
  //       o motor parou sem esses comando de cima
     motor1.run(RELEASE);// motor parado
     motor2.run(RELEASE);// motor parado
     motor3.run(RELEASE);// motor parado
     motor4.run(RELEASE);// motor parado 
        } 
      }
    }
  }
         
  if(ps2x.Button(PSB_RED)){
      Serial.print("DIREITA: ");
      Serial.println(ps2x.Analog(PSAB_PAD_RIGHT), DEC);
      motor1.setSpeed(velocidade_lenta); // velocidade máxima 0 a 255
      motor2.setSpeed(velocidade_lenta); // velocidade máxima 0 a 255
      motor3.setSpeed(velocidade_lenta); // velocidade máxima 0 a 255
      motor4.setSpeed(velocidade_lenta); // velocidade máxima 0 a 255
      motor1.run(BACKWARD); // sentido de rotação horário
      motor2.run(FORWARD); // sentido de rotação horário
      motor3.run(FORWARD); // sentido de rotação horário
      motor4.run(BACKWARD); // sentido de rotação horário
  }else {
    if(ps2x.Button(PSB_PINK)){
      Serial.print("ESQUERDA: ");
      Serial.println(ps2x.Analog(PSAB_PAD_LEFT), DEC); 
      motor1.setSpeed(velocidade_lenta); // velocidade máxima 0 a 255
      motor2.setSpeed(velocidade_lenta); // velocidade máxima 0 a 255
      motor3.setSpeed(velocidade_lenta); // velocidade máxima 0 a 255
      motor4.setSpeed(velocidade_lenta); // velocidade máxima 0 a 255
      motor1.run(FORWARD); // sentido de rotação horário
      motor2.run(BACKWARD); // sentido de rotação horário
      motor3.run(BACKWARD); // sentido de rotação horário
      motor4.run(FORWARD); // sentido de rotação horário
  }else {
     motor1.setSpeed(0); // velocidade 0, motor parado
     motor2.setSpeed(0); // velocidade 0, motor parado
     motor3.setSpeed(0); // velocidade 0, motor parado
     motor4.setSpeed(0); // velocidade 0, motor parado
  //       o motor parou sem esses comando de cima
     motor1.run(RELEASE);// motor parado
     motor2.run(RELEASE);// motor parado
     motor3.run(RELEASE);// motor parado
     motor4.run(RELEASE);// motor parado 
        } 
      }

    
       
//  if(ps2x.ButtonReleased(PSB_PINK))             //permite enviar um sinal, apenas quando solta o botão.    
  
//  if(ps2x.NewButtonState(PSB_BLUE)){            //permite enviar apenas dois sinais: um ao pressionar e outro ao soltar.

//  if(ps2x.ButtonPressed(PSB_RED))             //permite enviar um sinal, apenas quando aperta o botão.
   if(ps2x.Button(PSB_GREEN))
     Serial.println("Triangle pressed");     

  if(ps2x.Button(PSB_BLUE)){
    Serial.println("X just changed"); 
    digitalWrite(buzzer, HIGH);
  }else {
    digitalWrite(buzzer, LOW);
  }
  
    vibrate = ps2x.Analog(PSAB_BLUE);        //this will set the large motor vibrate speed based on 
                                            //how hard you press the blue (X) button    
  
//  if (ps2x.NewButtonState())              envia um sinal para cada aperto
//  {  
    if(ps2x.Button(PSB_L3))
     Serial.println("L3 pressed");
    if(ps2x.Button(PSB_R3))
     Serial.println("R3 pressed");
     
    if(ps2x.Button(PSB_L2)){
      Serial.println("L2 pressed");
////    movimento esquerda em linha reta:
//      motor1.setSpeed(velocidade);
//      motor2.setSpeed(velocidade); 
//      motor3.setSpeed(velocidade);
//      motor4.setSpeed(velocidade);
//      motor1.run(FORWARD); 
//      motor2.run(BACKWARD);
//      motor3.run(FORWARD);
//      motor4.run(BACKWARD); 
//      }else {
//        if(ps2x.Button(PSB_R2)) {
//          Serial.println("R2 pressed");
//  //      movimento direita em linha reta:
//          motor1.setSpeed(velocidade);
//          motor2.setSpeed(velocidade); 
//          motor3.setSpeed(velocidade);
//          motor4.setSpeed(velocidade);
//          motor1.run(BACKWARD); 
//          motor2.run(FORWARD);
//          motor3.run(BACKWARD);
//          motor4.run(FORWARD); 
//        }else {
//         motor1.setSpeed(0); // velocidade 0, motor parado
//         motor2.setSpeed(0); 
//         motor3.setSpeed(0); 
//         motor4.setSpeed(0); 
//  //     o motor parou sem esses comando de cima
//         motor1.run(RELEASE);// motor parado
//         motor2.run(RELEASE);
//         motor3.run(RELEASE);
//         motor4.run(RELEASE); 
//      }
    }

    if(ps2x.Button(PSB_R2))
      Serial.println("R2 pressed");
      
  if(ps2x.Button(PSB_L1) || ps2x.Button(PSB_R1)) // Enquanto L1 ou R1 estiverem pressionados:
  {
//    Serial.print("Stick Values:");
//    Serial.print(ps2x.Analog(PSS_LY), DEC); //valores Analógico esquerdo, eixo Y 
//    Serial.print(",");
//    Serial.print(ps2x.Analog(PSS_LX), DEC); //valores Analógico esquerdo, eixo X
//    Serial.print(",");
//    Serial.print(ps2x.Analog(PSS_RY), DEC); //valores Analógico direito, eixo Y 
//    Serial.print(",");
//    Serial.println(ps2x.Analog(PSS_RX), DEC); //valores Analógico direito, eixo x
    
    if (ps2x.Analog(PSS_LY), DEC < 128){ 
      Serial.println(ps2x.Analog(PSS_LY));
//    movimento para frente:
      motor1.setSpeed(velocidade); // velocidade máxima 0 a 255
      motor2.setSpeed(velocidade); 
      motor3.setSpeed(velocidade); 
      motor4.setSpeed(velocidade); 
      motor1.run(FORWARD); // sentido de rotação horário
      motor2.run(FORWARD); 
      motor3.run(FORWARD); 
      motor4.run(FORWARD);    
      }else {
        if (ps2x.Analog(PSS_LY), DEC > 128){
         Serial.println(ps2x.Analog(PSS_LY)); 
//       movimento para trás:              
         motor1.setSpeed(velocidade);
         motor2.setSpeed(velocidade);
         motor3.setSpeed(velocidade);
         motor4.setSpeed(velocidade);
         motor1.run(BACKWARD); // sentido de rotação ante-horário
         motor2.run(BACKWARD);
         motor3.run(BACKWARD);
         motor4.run(BACKWARD);
         }else {
           if(ps2x.Analog(PSS_LX), DEC > 128){
             Serial.println(ps2x.Analog(PSS_LX));
//           movimento para a direita:
             motor1.setSpeed(velocidade);
             motor2.setSpeed(velocidade); 
             motor3.setSpeed(velocidade);
             motor4.setSpeed(velocidade); 
             motor1.run(BACKWARD); 
             motor2.run(FORWARD); 
             motor3.run(FORWARD); 
             motor4.run(BACKWARD); 
           }else {
             if(ps2x.Analog(PSS_LX), DEC < 128){
               Serial.println(ps2x.Analog(PSS_LX));
//             movimento para a esquerda:
               motor1.setSpeed(velocidade);
               motor2.setSpeed(velocidade); 
               motor3.setSpeed(velocidade);
               motor4.setSpeed(velocidade);
               motor1.run(FORWARD); 
               motor2.run(BACKWARD);
               motor3.run(BACKWARD);
               motor4.run(FORWARD); 
               }else {
//                 if (ps2x.Analog(PSS_RX), DEC > 128){
//                   Serial.print(ps2x.Analog(PSS_RX), DEC);
////                 movimento direita em linha reta:
//                   motor1.setSpeed(velocidade);
//                   motor2.setSpeed(velocidade); 
//                   motor3.setSpeed(velocidade);
//                   motor4.setSpeed(velocidade);
//                   motor1.run(BACKWARD); 
//                   motor2.run(FORWARD);
//                   motor3.run(BACKWARD);
//                   motor4.run(FORWARD); 
//                 }else {
//                  if(ps2x.Analog(PSS_RX), DEC < 128){
//                    Serial.print(ps2x.Analog(PSS_RX), DEC);
////                  movimento esquerda em linha reta:
//                    motor1.setSpeed(velocidade);
//                    motor2.setSpeed(velocidade); 
//                    motor3.setSpeed(velocidade);
//                    motor4.setSpeed(velocidade);
//                    motor1.run(FORWARD); 
//                    motor2.run(BACKWARD);
//                    motor3.run(FORWARD);
//                    motor4.run(BACKWARD); 
//                  }else {
//                 if(ps2x.Analog(PSS_LY), DEC == 128 || ps2x.Analog(PSS_LX), DEC == 128){
                   Serial.println("Y: "+ps2x.Analog(PSS_LY));
                   Serial.println("X: "+ps2x.Analog(PSS_LX));
                   motor1.setSpeed(0); // velocidade 0, motor parado
                   motor2.setSpeed(0); 
                   motor3.setSpeed(0); 
                   motor4.setSpeed(0); 
//                 o motor parou sem esses comando de cima
                   motor1.run(RELEASE);// motor parado
                   motor2.run(RELEASE);
                   motor3.run(RELEASE);
                   motor4.run(RELEASE); 
                 }
               }
             }
           }
         }
//       }
     
   
         
//       if (ps2x.Analog(PSS_RY), DEC < 128 || ps2x.Analog(PSS_RY), DEC > 128 ){
//        Serial.print(ps2x.Analog(PSS_RY), DEC);
//        }
//

                  
 delay(50);    
}
